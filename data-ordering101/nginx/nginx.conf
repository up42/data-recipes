# -*- mode: nginx; mode: flyspell-prog;  ispell-local-dictionary: "american" -*-
user nginx;

events {
  worker_connections 4096;
  ## Accept as many connections as possible.
  multi_accept on;
}

http {
  ## MIME types.
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ## Default log and error files.
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ## Use sendfile() syscall to speed up I/O operations and speed up
  ## static file serving.
  sendfile on;

  ## Handling of IPs in proxied and load balancing situations.
  set_real_ip_from 0.0.0.0/32; # all addresses get a real IP.
  real_ip_header X-Forwarded-For; # the ip is forwarded from the load balancer/proxy

  ## Define a zone for limiting the number of simultaneous
  ## connections nginx accepts. 1m means 32000 simultaneous
  ## sessions. We need to define for each server the limit_conn
  ## value refering to this or other zones.
  limit_conn_zone $binary_remote_addr zone=arbeit:10m;

  ## Timeouts. Taken from:
  ## https://www.owasp.org/index.php/SCG_WS_nginx#SSL_Module.
  client_body_timeout 10;
  client_header_timeout 10;
  keepalive_timeout 5 5;
  send_timeout 10;

  ## Reset lingering timed out connections. Deflect DDoS.
  reset_timedout_connection on;

  ## Body size.
  client_max_body_size 10m;

  ## TCP options.
  tcp_nodelay on;
  ## Optimization of socket handling when using sendfile.
  tcp_nopush on;

  ## Compression.
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 1;
  gzip_http_version 1.1;
  gzip_min_length 10;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
  gzip_vary on;
  gzip_proxied any; # Compression for all requests.
  ## No need for regexps. See
  ## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
  gzip_disable msie6;

  ## Serve already compressed files directly, bypassing on-the-fly
  ## compression.
  ##
  # Usually you don't make much use of this. It's better to just
  # enable gzip_static on the locations you need it.
  # gzip_static on;

  ## Hide the Nginx version number.
  server_tokens off;

  ## Fill in with your own resolver.
  resolver 8.8.8.8;

  ## Use fast header compression for SPDY. This is commented out
  ## because of the HTTP/2 module that disables support for SPDY.
  ## Cf. https://www.nginx.com/blog/nginx-1-9-5.
  #spdy_headers_comp 1;

  ## Uncomment to increase map_hash_bucket_size. If start getting
  ## [emerg]: could not build the map_hash, you should increase
  ## map_hash_bucket_size: 64 in your
  ## logs. Cf. http://wiki.nginx.org/NginxOptimizations.
  #map_hash_bucket_size 192;

  ## Uncomment one of the lines below if you start getting this message:
  ## "[emerg] could not build the variables_hash, you should increase
  ## either variables_hash_max_size: 512 or variables_hash_bucket_size: 64"
  ## You only need to increase one. Increasing variables_hash_max_size to 1024
  ## was recommended in nginx forum by developers.
  ## See this forum topic and responses
  ## http://forum.nginx.org/read.php?2,192277,192286#msg-192286
  ## See http://wiki.nginx.org/HttpCoreModule#variables_hash_bucket_size
  ## The line variables_hash_bucket_size was added for completeness but not
  ## changed from default.
  #variables_hash_max_size 1024; # default 512
  #variables_hash_bucket_size 64; # default is 64

  ## Enable the builtin cross-site scripting (XSS) filter available
  ## in modern browsers.  Usually enabled by default we just
  ## reinstate in case it has been somehow disabled for this
  ## particular server instance.
  ## https://www.owasp.org/index.php/List_of_useful_HTTP_headers.
  add_header X-XSS-Protection '1; mode=block';

  ## Enable clickjacking protection in modern browsers. Available in
  ## IE8 also. See
  ## https://developer.mozilla.org/en/The_X-FRAME-OPTIONS_response_header
  ## This may conflicts with pseudo streaming (at least with Nginx version 1.0.12).
  ## Uncomment the line below if you're not using media streaming.
  ## For sites being framing on the same domqin uncomment the line below.
  #add_header X-Frame-Options SAMEORIGIN;
  ## For sites accepting to be framed in any context comment the
  ## line below.
  add_header X-Frame-Options DENY;

  ## Block MIME type sniffing on IE.
  add_header X-Content-Options nosniff;

  ## For storing webhooks only allow GET requests.
  map $request_method $not_allowed_method {
    GET 0;
    default 1;
  }

  ## Deal with the information provided in the header relative to the UP42 data order.
  map $http_up42_order_info $valid_order_info {
    default 0;
    ~*^(?<order_id>[[:xdigit:]\-]+),[[:space:]]?(?<order_status>(fulfilled|failed_permanently))$ '"$order_id","$order_status"';
  }

  ## Log all order information as JSONL (https://jsonlines.org).
  log_format order_logs '["$date_gmt", "$order_id", "$order_status"]';

  server {
    listen 80;

    ## Only GET is allowed here.
    if ($not_allowed_method) {
      return 405 '{"code": 405, "msg": "method not allowed"}';
    }

    location / {
      root /usr/share/nginx/html;
      index index.html index.htm;
    }

    location /input {
      default_type application/json;

      ## Check to see if the received order information is valid.
      if ($valid_order_info = 0) {
        return 400 '{"code": 400, "msg": "Incorrect order ID and/or status"}';
      }

      ## Log all orders that are properly communicated.
      access_log /var/log/nginx/up42_order_log.jsonl order_logs if=$valid_order_info;

      ## Echo back the received order information.
      return 200 '{"code": 200, "msg": [$valid_order_info]}';
    }

    ## Get rid of the log polluting favicon.ico 404 error.
    location = /favicon.ico {
      access_log off;

      root /usr/local/openresty/nginx/html;
      try_files /favicon.ico =204;
    }

    # Ping location to find out if the server is up and running.
    location ~* /ping {
      default_type text/plain;
      return 200 'PONG';
    }
  }
}
